<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="UserXMapper">
	
    <cache type="org.mybatis.caches.ehcache.LoggingEhcache"/>  
	
	<!-- 换皮肤-->
	<update id="setSKIN" parameterType="pd" flushCache="false">
		update SYS_USER set 
		SKIN = #{SKIN} 
		where USERNAME = #{USERNAME}
	</update>
	
	<!-- 更新登录时间 -->
	<update id="updateLastLogin" parameterType="pd" flushCache="false">
		update SYS_USER set 
		LAST_LOGIN = #{LAST_LOGIN} 
		where USER_ID = #{USER_ID}
	</update>
	
	<!-- 判断用户名和密码 -->
	<select id="getUserInfo" parameterType="pd" resultType="pd" useCache="false"><!-- insert update delete (flushCache="true/false") -->
		select * from T_Admin_Employee 
		where 1=1
		<if test="USERNAME != null and PASSWORD != null">
	  	and	(
	  		(USERNO = #{USERNAME} and PASSWORD = #{PASSWORD})
	  		)
		</if>
		<if test="USER_ID != null and USER_ID != ''">
		and ID = #{USER_ID}
		</if>
	</select>
	

	
	<!-- 存入IP -->
	<update id="saveIP" parameterType="pd" flushCache="false">
		update SYS_USER 
			set 
				IP = #{IP}
			where 
				USERNAME = #{USERNAME}
	</update>
	
	<!-- 修改 -->
	<update id="editU" parameterType="pd" flushCache="false">
		update  T_Admin_Employee
			set UserNo 					= #{UserNo},
				USERNAME				= #{UserName},
				RoleId 					= #{RoleId},
				Comment					= #{Comment},
				Email					= #{Email}, 
				Telphone				= #{Telphone}
			<if test="PASSWORD != null and PASSWORD != ''">
				,PASSWORD				= #{PASSWORD}
			</if>
			where Id = #{UserId} 
	</update>
	
	<!-- 通过user_id获取数据 -->
	<select id="findByUiId" parameterType="pd" resultType="pd" useCache="false">
		select 
			Id as USER_ID,
			USERNAME,
			PASSWORD,
			UserNo,
			RIGHTS,
			RoleId, 
			STATUS,  
			Email,
			Comment,
			Telphone
		from 
			T_Admin_Employee
		where 
			Id = #{USER_ID}
	</select>
		
	<!-- 通过邮箱获取数据 -->
	<select id="findByUE" parameterType="pd" resultType="pd" useCache="false">
		select 
			USER_ID,
			USERNAME,
			PASSWORD,
			NAME,
			RIGHTS,
			ROLE_ID,
			LAST_LOGIN,
			IP,
			STATUS,
			BZ,
			SKIN,
			EMAIL,
			NUMBER,
			PHONE
		from 
			SYS_USER
		where 
			EMAIL = #{EMAIL}
		<if test="USERNAME != null and USERNAME != ''">
			and USERNAME != #{USERNAME} 
		</if>
	</select>
	
	<!-- 通过编号获取数据 -->
	<select id="findByUN" parameterType="pd" resultType="pd" useCache="false">
		select 
			USER_ID,
			USERNAME,
			PASSWORD,
			NAME,
			RIGHTS,
			ROLE_ID,
			LAST_LOGIN,
			IP,
			STATUS,
			BZ,
			SKIN,
			EMAIL,
			NUMBER,
			PHONE
		from 
			SYS_USER
		where 
			NUMBER = #{NUMBER}
		<if test="USERNAME != null and USERNAME != ''">
			and USERNAME != #{USERNAME} 
		</if>
	</select>
	
	<!-- 通过USERNAME获取数据 -->
	<select id="findByUId" parameterType="pd" resultType="pd" useCache="false">
		select 
			Id,
			UserNo,
			Password,
			UserName,
			Rights,
			RoleId,
			Status,
			Email,
			Telphone
		from 
			T_Admin_Employee
		where 
			UserNo = #{USERNAME}
	</select>
	
	<!-- 新增用户 -->
	<insert id="saveU" parameterType="pd" flushCache="false">
		insert into T_Admin_Employee ( 
			USERNAME,
			PASSWORD,
			UserNo,
			RIGHTS,
			ROLEID, 
			STATUS,
			Comment, 
			EMAIL, 
			Telphone
		) values ( 
			#{UserName},
			#{PASSWORD},
			#{UserNo},
			#{RIGHTS},
			#{RoleId}, 
			#{STATUS},
			#{Comment}, 
			#{EMAIL}, 
			#{Telphone}
		)
	</insert>
	<!-- 用户列表(用户组) -->
	<select id="userlistPage" parameterType="page" resultType="pd" useCache="false">
		select  TOP 100 PERCENT
				u.Id,
				u.UserNo,
				u.PASSWORD,
				u.UserName,
				u.EMAIL,
				u.Telphone,
				r.Id as ROLEID,
				r.ROLENAME
		from T_Admin_Employee u, dbo.T_Admin_Role r 
		where u.RoleId = r.Id 
		and U.UserNo != 'admin'
		AND U.USERNO != 'administrator'
		<if test="pd.USERNAME != null and pd.USERNAME != ''"><!-- 关键词检索 -->
			and 	 u.UserName LIKE '%' + #{pd.USERNAME} + '%' 
		</if>
		<if test="pd.ROLE_ID != null and pd.ROLE_ID != ''"><!-- 角色检索 -->
			and u.ROLEID=#{pd.ROLE_ID} 
		</if>
		ORDER BY ID desc
	</select>
	
	<!-- 用户列表(全部) -->
	<select id="listAllUser" parameterType="pd" resultType="pd" useCache="false">
		select  u.USER_ID,
				u.USERNAME,
				u.PASSWORD,
				u.LAST_LOGIN,
				u.NAME,
				u.IP,
				u.EMAIL,
				u.NUMBER,
				u.PHONE,
				r.ROLE_ID,
				r.ROLE_NAME
		from SYS_USER u, SYS_ROLE r 
		where u.ROLE_ID = r.ROLE_ID 
		and u.USERNAME != 'admin'
		and (r.ROLE_ID != '7' and r.PARENT_ID != '7')
		<if test="USERNAME != null and USERNAME != ''"><!-- 关键词检索 -->
			and
				(
					 u.USERNAME LIKE CONCAT(CONCAT('%', #{USERNAME}),'%')
					 or 
					 u.EMAIL LIKE CONCAT(CONCAT('%', #{USERNAME}),'%') 
					 or
					 u.NUMBER LIKE CONCAT(CONCAT('%', #{USERNAME}),'%')
					 or
					 u.NAME LIKE CONCAT(CONCAT('%', #{USERNAME}),'%')
					  or
					 u.PHONE LIKE CONCAT(CONCAT('%', #{USERNAME}),'%')
				)
		</if>
		<if test="ROLE_ID != null and ROLE_ID != ''"><!-- 角色检索 -->
			and u.ROLE_ID=#{ROLE_ID} 
		</if>
		<if test="lastLoginStart!=null and lastLoginStart!=''"><!-- 登录时间检索 -->
			and u.LAST_LOGIN &gt;= #{lastLoginStart} 
		</if>
		<if test="lastLoginEnd!=null and lastLoginEnd!=''"><!-- 登录时间检索 -->
			and u.LAST_LOGIN &lt;= #{lastLoginEnd} 
		</if>
		order by u.LAST_LOGIN desc
	</select>
	
	<!-- 删除用户 -->
	<delete id="deleteU" parameterType="pd" flushCache="false">
		delete from T_Admin_Employee
		where Id = #{USER_ID}
	</delete>
	
	<!-- 批量删除用户 -->
	<delete id="deleteAllU" parameterType="String" flushCache="false">
		delete from T_Admin_Employee
		where Id in
  			 <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
                  #{item}
             </foreach>
	</delete>
	
</mapper>